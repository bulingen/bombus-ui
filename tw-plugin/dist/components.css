/* @layer components { */
/* @apply rounded-lg p-md text-neutral-900 dark:text-neutral-50; */
/* .fun-alert-info,
.fun-alert-warning,
.fun-alert-danger,
.fun-alert-success {
  @apply rounded p-2 text-neutral-900 dark:text-neutral-50 bg-opacity-20;
} */
.fun-alert {
  @apply rounded p-2 text-neutral-900 dark:text-neutral-50 border;
}
.fun-alert-info {
  @apply bg-blue-400 border-blue-400 bg-opacity-20 border-opacity-50;
  /* @apply dark:bg-blue-400 dark:border-blue-500; */
  /* @apply dark:border-blue-500; */
}
.fun-alert-warning {
  @apply bg-yellow-400 border-yellow-400 bg-opacity-20 border-opacity-50;
  /* @apply dark:bg-yellow-400 dark:border-yellow-500; */
  /* @apply dark:border-yellow-500; */
}
.fun-alert-danger {
  @apply bg-red-400 border-red-400 bg-opacity-20 border-opacity-50;
  /* @apply dark:border-red-500; */
}
.fun-alert-success {
  @apply bg-green-400 border-green-400 bg-opacity-20 border-opacity-50;
  /* @apply dark:border-green-400; */
}
/* .fun-alert-info .fun-alert-icon {
  @apply text-blue-600 dark:text-blue-300;
}
.fun-alert-warning .fun-alert-icon {
  @apply text-yellow-600 dark:text-yellow-300;
}
.fun-alert-danger .fun-alert-icon {
  @apply text-red-600 dark:text-red-300;
}
.fun-alert-success .fun-alert-icon {
  @apply text-green-600 dark:text-green-300;
} */
/* } */
/* @layer utilities { */
/* .fun-alert-info,
.fun-alert-warning,
.fun-alert-danger,
.fun-alert-success {
  @apply dark:bg-opacity-20;
} */
/* } */
.btn {
  --button-color: var(--outline);
  --button-height: 2.5rem;
  @apply inline-flex font-semibold px-md rounded box-border border border-transparent transition-all text-primary text-[0.875rem];
  @apply h-[var(--button-height)] items-center justify-center gap-x-sm;
  transition-property: color, background-color, border-color, opacity,
    box-shadow, transform;
}
.btn:hover,
.btn-outline:hover,
.btn-ghost:hover {
  background-color: color-mix(
    in oklab,
    oklch(var(--button-color)) 12.5%,
    transparent
  );
}
.btn-outline {
  --button-color: var(--outline);
  @apply border border-outline text-outline-content;
}
.btn-ghost {
  --button-color: var(--outline);
  @apply text-outline;
}
.btn-danger {
  --button-color: var(--danger);
  --content-color: var(--danger-content);
}
.btn-primary {
  --button-color: var(--primary);
  --content-color: var(--primary-content);
}
.btn-primary,
.btn-danger {
  background-color: oklch(var(--button-color));
  border-color: oklch(var(--button-color));
  color: oklch(var(--content-color));
}
.btn-primary:hover,
.btn-danger:hover {
  background-color: color-mix(in oklab, oklch(var(--button-color)), black 10%);
  border-color: color-mix(in oklab, oklch(var(--button-color)), black 10%);
}
.btn:focus-visible {
  @apply outline outline-2 outline-offset-2 outline-primary;
}
.btn-sm {
  --button-height: 1.5rem;
  @apply px-[0.5rem] text-[0.75rem];
}
.btn-lg {
  --button-height: 3.5rem;
  @apply px-[1.5rem] text-[1rem];
}
.btn-square {
  @apply w-[var(--button-height)] p-[unset];
}
.btn:active:hover,
.btn-outline:active:hover,
.btn-ghost:active:hover {
  background-color: color-mix(
    in oklab,
    oklch(var(--button-color)) 25%,
    transparent
  );
}
.btn-primary:active:hover,
.btn-primary:active:focus,
.btn-danger:active:hover,
.btn-danger:active:focus {
  background-color: color-mix(in oklab, oklch(var(--button-color)), black 17%);
  border-color: color-mix(in oklab, oklch(var(--button-color)), black 17%);
}
.btn:active:hover,
.btn:active:focus {
  transform: scale(var(--btn-pressed-scale, 0.97));
}
input[type="checkbox"].toggle {
  --toggle-base: oklch(var(--primary));
  --toggle-contrast: oklch(var(--text-color));
  --toggle-surroundings: oklch(var(--page));
  --toggle-border-unchecked: var(--toggle-contrast);
  --toggle-border-checked: var(--toggle-base);
  --toggle-unchecked: color-mix(
    in oklab,
    var(--toggle-contrast) 10%,
    var(--toggle-surroundings) 30%
  );
  --toggle-disabled-checked-bg: color-mix(
    in oklab,
    var(--toggle-surroundings) 20%,
    var(--toggle-base) 20%
  );
  --toggle-disabled-unchecked-bg: var(--toggle-surroundings);
  --toggle-disabled-checked-knob: var(--toggle-surroundings);
  --toggle-disabled-unchecked-knob: color-mix(
    in oklab,
    var(--toggle-surroundings) 20%,
    var(--toggle-contrast) 20%
  );
  --toggle-knob: var(--toggle-contrast);
  --toggle-bg-checked: var(--toggle-base);
  --toggle-knob-checked: var(--toggle-surroundings);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: var(--toggle-unchecked);
  border-radius: 72px;
  flex-shrink: 0;
  height: 20px;
  margin: 0;
  position: relative;
  width: 30px;
  border-width: 2px;
  border-color: var(--toggle-border-unchecked);
  cursor: pointer;
}
input[type="checkbox"].toggle::before {
  bottom: -6px;
  content: "";
  left: -6px;
  position: absolute;
  right: -6px;
  top: -6px;
}
input[type="checkbox"].toggle::after {
  transition: all 100ms ease-out;
  background-color: var(--toggle-knob);
}
input[type="checkbox"].toggle::after {
  border-radius: 50%;
  content: "";
  height: 14px;
  width: 14px;
  position: absolute;
  left: 1px;
  top: 1px;
}
input[type="checkbox"].toggle:checked {
  background-color: var(--toggle-bg-checked);
  border-color: var(--toggle-border-checked);
}
input[type="checkbox"].toggle:checked::after {
  background-color: var(--toggle-knob-checked);
  left: 11px;
}
input[type="checkbox"].toggle:focus-visible {
  @apply outline outline-2 outline-offset-2 outline-primary;
}
input[type="checkbox"].toggle:disabled {
  border-color: var(--toggle-disabled-unchecked-knob);
  background-color: var(--toggle-disabled-unchecked-bg);
  cursor: not-allowed;
}
input[type="checkbox"].toggle:disabled::after {
  background-color: var(--toggle-disabled-unchecked-knob);
}
input[type="checkbox"].toggle:disabled:checked::after {
  background-color: var(--toggle-disabled-checked-knob);
}
input[type="checkbox"].toggle:disabled:checked {
  background-color: var(--toggle-disabled-checked-bg);
  border-color: var(--toggle-disabled-checked-bg);
}
input[type="checkbox"].toggle.toggle-sm {
  height: 16px;
  width: 26px;
}
input[type="checkbox"].toggle.toggle-sm::after {
  height: 10px;
  width: 10px;
}
/* dialog.modal {
  @apply bg-transparent text-[inherit] duration-200 ease-out;
  transition-property: transform, opacity, visibility;
  overflow-y: hidden;
  overscroll-behavior: contain;
  &:not(dialog:not(.modal-open)),
  &::backdrop {
    background-color: #0006;
    animation: modal-pop 0.2s ease-out;
  }
  @apply !m-0;
} */
/* dialog[class~="modal"] {
  margin-left: 0;
  margin-right: 0;
} */
/* .modal-backdrop {
  @apply -z-[1] col-start-1 row-start-1 grid self-stretch justify-self-stretch text-transparent;
}
.modal-box {
  @apply bg-white rounded-b rounded-t col-start-1 row-start-1 w-11/12 max-w-lg scale-90 transform p-6 transition duration-200 ease-out;
  box-shadow: rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;
  overflow-y: auto;
  overscroll-behavior: contain;
} */
/* .modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box,
.modal[open] .modal-box {
  @apply translate-y-0 scale-100;
} */
/* .modal-action {
  @apply mt-6 justify-end space-x-2;
} */
@keyframes modal-pop {
  0% {
    opacity: 0;
  }
}
/* TODO fix background */
dialog.modal {
  margin: 0 !important;
  margin-left: 0 !important;
  margin-right: 0 !important;
  pointer-events: none;
  position: fixed;
  inset: 0;
  margin: 0;
  display: grid;
  height: 100%;
  max-height: none;
  width: 100%;
  max-width: none;
  justify-items: center;
  padding: 0;
  opacity: 0;
  overscroll-behavior: contain;
  z-index: 999;
  background-color: transparent;
  color: inherit;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-property: transform, opacity, visibility;
  overflow-y: hidden;
}
.modal-open,
.modal:target,
.modal-toggle:checked + .modal,
.modal[open] {
  pointer-events: auto;
  visibility: visible;
  opacity: 1;
}
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box,
.modal[open] .modal-box {
  --tw-translate-y: 0px;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.modal-box {
  max-height: calc(100vh - 5em);
  grid-column-start: 1;
  grid-row-start: 1;
  width: 91.666667%;
  max-width: 32rem;
  --tw-scale-x: 0.9;
  --tw-scale-y: 0.9;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-bottom-right-radius: var(--rounded-box, 1rem);
  border-bottom-left-radius: var(--rounded-box, 1rem);
  border-top-left-radius: var(--rounded-box, 1rem);
  border-top-right-radius: var(--rounded-box, 1rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
  padding: 1.5rem;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 0.2s;
  box-shadow: #00000040 0 25px 50px -12px;
  overflow-y: auto;
  overscroll-behavior: contain;
}
